#!/bin/sh
#
# Automatically merge the branches for a given integration branch
#

. ~/bin/tip/tip-lib

check_master

BRANCH=$1

git-checkout tip
if [ ! -f  .tip/auto-branches/$BRANCH ]
then
    echo "usage: tip-integrate integration-branch"
    echo "available integration branches:"
    BS=`get_auto_branches master`
    for B in $BS; do echo "    $B"; done
    exit 1;
fi

# Read the branch list
git-checkout tip
MB=`cat .tip/auto-branches/$BRANCH | grep -v "^[# \n]"`
# switch back to master
git-checkout master
# Blow away the existing integration branch and create a new one
git-branch -f $BRANCH
# Build the new integration branch
git-checkout $BRANCH

for B in $MB
do
    echo "Merging $B"
    git-merge $B || {

	echo Merging $B failed
	echo merge conflict - run tip-mergetool
	echo
	echo running subshell - type "exit" when resolved
	$SHELL || abort_merge

	NCOM=`git-ls-files -u`
	if [ ! -z "$NCOM" ]
	then
	    echo "Merge was not committed! Fixing it up"
	    git-add $(git-ls-files -u | cut -f2 | sort | uniq)
	    git-commit -s || abort_merge;
	fi
    }
done
